services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sonar_network
    restart: always

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - SONARQUBE_JAVA_OPTS=-Djavax.net.ssl.truystStore=/opt/java/openjdk/lib/security/cacerts -Djavax.net.ssl.trustStorePassword=changeit
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - ./sonar.properties:/opt/sonarqube/conf/sonar.properties
      - /home/ubuntu/cacerts2:/opt/java/openjdk/lib/security/cacerts
    networks:
      - sonar_network
    depends_on:
      - postgres
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx_sonarqube
    ports:
      - "1443:1443"  # Port HTTP pour acc√©der via le navigateur
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/ssl/certs/tcertif-intermediaire-apps/certif-sonarqube:/etc/ssl/certs/certif-intermediaire-apps/certif-sonarqube
    networks:
      - sonar_network
      - public
    depends_on:
      - sonarqube
    restart: always

networks:
  sonar_network:
  public:
    driver: bridge

volumes:
  postgres_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
